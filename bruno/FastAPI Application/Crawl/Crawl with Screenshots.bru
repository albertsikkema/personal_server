meta {
  name: Crawl with Screenshots
  type: http
  seq: 4
}

post {
  url: {{baseUrl}}/crawl
  body: json
  auth: none
}

headers {
  Content-Type: application/json
}

body:json {
  {
    "urls": ["https://dev.bba.nl/maps/66579bbe8a76598af0e2961c"],
    "markdown_only": false,
    "scrape_internal_links": false,
    "scrape_external_links": false,
    "capture_screenshots": true,
    "screenshot_width": 1920,
    "screenshot_height": 1080,
    "screenshot_wait_for": 3,
    "cache_mode": "bypass"
  }
}

tests {
  test("Status code is 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("Screenshot capture validation", function() {
    const data = res.getBody();
    expect(data.total_urls).to.equal(1);
    
    if (data.results.length > 0 && data.results[0].success) {
      const result = data.results[0];
      
      // Content should be present
      expect(result).to.have.property('markdown');
      expect(result).to.have.property('cleaned_html');
      expect(result).to.have.property('metadata');
      
      // Screenshot fields may be present if capture succeeded
      if (result.screenshot_base64) {
        expect(result.screenshot_base64).to.be.a('string');
        expect(result.screenshot_base64.length).to.be.greaterThan(100);
        
        expect(result).to.have.property('screenshot_size');
        expect(result.screenshot_size.width).to.equal(1920);
        expect(result.screenshot_size.height).to.equal(1080);
      }
    }
  });
  
  test("Cache bypass behavior", function() {
    const data = res.getBody();
    // With cache_mode: "bypass", cached_results should be 0
    expect(data.cached_results).to.equal(0);
  });
}

docs {
  # Crawl with Screenshot Capture
  
  This example demonstrates crawling with screenshot capture using custom dimensions.
  
  ## Screenshot Configuration
  
  - **Custom Dimensions**: 1920x1080 (Full HD)
  - **Wait Time**: 3 seconds for page loading
  - **Cache Bypass**: Fresh capture every time
  - **Format**: PNG with base64 encoding
  
  ## Screenshot Validation
  
  - **Width Range**: 320-3840 pixels
  - **Height Range**: 240-2160 pixels  
  - **Aspect Ratio**: 0.5:1 to 4:1 (prevents extreme dimensions)
  - **Automatic Dimension Extraction**: From PNG headers without Pillow
  
  ## Common Screenshot Sizes
  
  - **Mobile**: 360x640, 375x667, 414x896
  - **Tablet**: 768x1024, 1024x768
  - **Desktop**: 1280x720, 1366x768, 1920x1080
  - **4K**: 3840x2160
  
  ## Response with Screenshot
  
  ```json
  {
    "total_urls": 1,
    "successful_crawls": 1,
    "failed_crawls": 0,
    "cached_results": 0,
    "results": [
      {
        "url": "https://example.com",
        "success": true,
        "markdown": "# Example Domain\n\nThis domain...",
        "cleaned_html": "<h1>Example Domain</h1>...",
        "metadata": {"title": "Example Domain"},
        "screenshot_base64": "iVBORw0KGgoAAAANSUhEUgAA...",
        "screenshot_size": {"width": 1920, "height": 1080},
        "status_code": 200,
        "crawl_time_seconds": 4.2
      }
    ],
    "timestamp": "2024-01-01T12:00:00",
    "total_time_seconds": 4.8
  }
  ```
  
  ## Note
  
  Screenshot capture may fail gracefully without affecting the main crawl operation. If the Crawl4AI service is unavailable or screenshot capture fails, the `screenshot_base64` field will be `null` but the text content will still be extracted successfully.
}
